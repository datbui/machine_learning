clear all; close all;pkg load statistics;X = dlmread('mnist_train.csv', ",");y = X(:,1);% Initialize valuesX(:,1) = [];[m n] = size(X);unique_y = unique(y);idx = zeros(m, 1);max_iters =1;K = 10;N=50;max_iter=100;clss = zeros(N,length(X));%obj_clusters = zeros(N,length(X));for i = 1:N  centroids =  kMeansInitCentroids(X, K);  for iter = 1:max_iter        previous_centroids = centroids;        % Run K-Means    D=pdist2(X,centroids);    [miv indx] = min(D');    newclusters=indx;    #for i=1:max_iters    #  % Output progress    #  fprintf('K-Means iteration %d/%d...\n', i, max_iters);    #      #  % For each example in X, assign it to the closest centroid    #  for j = 1:m    #    x = X(j, :);    #    center = 9999999999;    #    idx(j) = 1;    #    for z =1:K(k)    #      new_center = sum((x - centroids(z, :)).^2)/n;    #      if new_center <= center    #        center = new_center;    #        idx(j) = z;    #      endif    #    endfor    #  endfor      % Given the memberships, compute new centroids    for j =1:K      cluster = X(find(newclusters==j),:);      centroids(j,:) = mean(cluster);    endfor        D = pdist2(X,centroids);    [miv indx] = min(D');    O(iter) = sum(miv);    obj_clusters(iter, :) = newclusters;  endfor  [E(i) indx] = min(O);  clss(i, :) = obj_clusters(indx,:);endfor[min_err min_indx] = min(E);clusters = clss(min_indx, :)';fprintf('\nError  %f\n', min_err);m = numel(unique_y);n = numel(unique(clusters));labled_clusters = ones(size(clusters))*10;wrong = 0;for i = 1:n    indx = find(clusters == i);    labels = y(indx);    corr_label = mode(labels);    wrong = wrong + sum( labels != corr_label);    labled_clusters(indx) = corr_label;endforfprintf('\n Amount of inccorect classification %d\n', wrong);close all;figure 1;plot(E);xlabel ("Number of random initialization");ylabel ("Error");legend("Error/Loss function");title("Plot of 50 cycle random initialization of centroids");text(min_indx, min_err, "Minimum of Error");hold on;plot(min_indx, min_err, "m+");print -dpng 'errors_plot.png'figure 2;hist(y,0:9);xlabel ("digits");ylabel ("Count");title ("Histogram of 1000 images distributed by digits");print -dpng 'digits_correct_classification.png'figure 3;hist(labled_clusters,0:9);xlabel ("digits");ylabel ("Count");title ("Histogram of 1000 images distributed by digits (Prediction)");print -dpng 'digits_predict_classification.png'